// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RotateTurret.h"

#define kLeft 1
#define kRight -1
#define kStop 0
#define kSpeed 0.5

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

RotateTurret::RotateTurret(int direction): Command() {
    m_direction = direction;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::aiming.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void RotateTurret::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void RotateTurret::Execute() {
	switch (Robot::oi->getXboxController()->GetPOV(0)) {
		case 90:
	    	m_direction = kLeft;
	    	break;

		case 270:
			m_direction = kRight;
			break;

		default:
			m_direction = kStop;
		}
	RobotMap::aimingTurretJag->Set(m_direction * kSpeed);
}

// Make this return true when this Command no longer needs to run execute()
bool RotateTurret::IsFinished() {
	return false;
}

// Called once after isFinished returns true
void RotateTurret::End() {
	Stop();
}

void RotateTurret::Stop() {
	RobotMap::aimingTurretJag->Set(kStop * kSpeed);
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void RotateTurret::Interrupted() {
	Stop();
}
