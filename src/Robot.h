// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef _ROBOT_H
#define _ROBOT_H

#include "WPILib.h"
#include "Commands/Command.h"
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
#include "../../XboxJoystickMap/XboxJoystickMap.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "Commands/AutonomousCommand.h"
#include "Commands/DriveStraight.h"
#include "Commands/TurnWithAngle.h"
#include "Commands/CenterGoal.h"
#include "Subsystems/Aiming.h"
#include "Subsystems/Conveyor.h"
#include "Subsystems/Driving.h"
#include "Subsystems/IntakeRollers.h"
#include "Subsystems/Shooting.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "OI.h"

class Robot : public IterativeRobot {
public:
	std::unique_ptr<Command> autonomousCommand;
	std::unique_ptr<Command> driveStraightAuto;
	std::unique_ptr<Command> turnWithAngleAuto;
	std::unique_ptr<Command> centerGoalAuto;

	static std::unique_ptr<OI> oi;
	LiveWindow *lw = LiveWindow::GetInstance();
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    static std::shared_ptr<Conveyor> conveyor;
    static std::shared_ptr<Driving> driving;
    static std::shared_ptr<Shooting> shooting;
    static std::shared_ptr<Aiming> aiming;
    static std::shared_ptr<IntakeRollers> intakeRollers;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	virtual void RobotInit();
	virtual void DisabledInit();
	virtual void DisabledPeriodic();
	virtual void AutonomousInit();
	virtual void AutonomousPeriodic();
	virtual void TeleopInit();
	virtual void TeleopPeriodic();
	virtual void TestPeriodic();

	static std::shared_ptr<ADXRS450_Gyro> gyro;
	static std::shared_ptr<CameraServer> cameraServer;
	static std::shared_ptr<NetworkTable> networkTable;

	const char *JAVA = "/usr/local/frc/JRE/bin/java";
	char *GRIP_ARGS[5] = { "java", "-jar", "/home/lvuser/grip.jar",
	            "/home/lvuser/project.grip", NULL };
};
#endif
