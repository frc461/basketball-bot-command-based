// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<SpeedController> RobotMap::conveyorConveyorJag;
std::shared_ptr<SpeedController> RobotMap::drivingBackRightDrive;
std::shared_ptr<SpeedController> RobotMap::drivingBackLeftDrive;
std::shared_ptr<SpeedController> RobotMap::drivingFrontRightDrive;
std::shared_ptr<SpeedController> RobotMap::drivingFrontLeftDrive;
std::shared_ptr<RobotDrive> RobotMap::drivingRobotDrive41;
std::shared_ptr<Relay> RobotMap::shootingKickupSpike;
std::shared_ptr<SpeedController> RobotMap::shootingLeftFireWheelJag;
std::shared_ptr<SpeedController> RobotMap::shootingRightFireWheelJag;
std::shared_ptr<SpeedController> RobotMap::aimingTurretJag;
std::shared_ptr<Relay> RobotMap::intakeRollersIntakeSpike;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    conveyorConveyorJag.reset(new Jaguar(7));
    lw->AddActuator("Conveyor", "ConveyorJag", (Jaguar&) conveyorConveyorJag);
    
    drivingBackRightDrive.reset(new Jaguar(2));
    lw->AddActuator("Driving", "BackRightDrive", (Jaguar&) drivingBackRightDrive);
    
    drivingBackLeftDrive.reset(new Jaguar(1));
    lw->AddActuator("Driving", "BackLeftDrive", (Jaguar&) drivingBackLeftDrive);
    
    drivingFrontRightDrive.reset(new Jaguar(3));
    lw->AddActuator("Driving", "FrontRightDrive", (Jaguar&) drivingFrontRightDrive);
    
    drivingFrontLeftDrive.reset(new Jaguar(0));
    lw->AddActuator("Driving", "FrontLeftDrive", (Jaguar&) drivingFrontLeftDrive);
    
    drivingRobotDrive41.reset(new RobotDrive(drivingFrontLeftDrive, drivingBackLeftDrive,
              drivingFrontRightDrive, drivingBackRightDrive));
    
    drivingRobotDrive41->SetSafetyEnabled(true);
        drivingRobotDrive41->SetExpiration(0.1);
        drivingRobotDrive41->SetSensitivity(0.5);
        drivingRobotDrive41->SetMaxOutput(1.0);
        drivingRobotDrive41->SetInvertedMotor(RobotDrive::kFrontLeftMotor, true);
        drivingRobotDrive41->SetInvertedMotor(RobotDrive::kRearLeftMotor, true);
        drivingRobotDrive41->SetInvertedMotor(RobotDrive::kFrontRightMotor, true);
        drivingRobotDrive41->SetInvertedMotor(RobotDrive::kRearRightMotor, true);
    shootingKickupSpike.reset(new Relay(1));
    lw->AddActuator("Shooting", "KickupSpike", shootingKickupSpike);
    
    shootingLeftFireWheelJag.reset(new Jaguar(4));
    lw->AddActuator("Shooting", "LeftFireWheelJag", (Jaguar&) shootingLeftFireWheelJag);
    
    shootingRightFireWheelJag.reset(new Jaguar(5));
    lw->AddActuator("Shooting", "RightFireWheelJag", (Jaguar&) shootingRightFireWheelJag);
    
    aimingTurretJag.reset(new Jaguar(6));
    lw->AddActuator("Aiming", "TurretJag", (Jaguar&) aimingTurretJag);
    
    intakeRollersIntakeSpike.reset(new Relay(2));
    lw->AddActuator("IntakeRollers", "IntakeSpike", intakeRollersIntakeSpike);
    


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
